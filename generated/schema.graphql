### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Equipment {
  children(after: String, before: String, first: Int, last: Int, orderBy: EquipmentOrderByInput, skip: Int, where: EquipmentWhereInput): [Equipment!]
  code: String
  description: String
  equipmentClasses(after: String, before: String, first: Int, last: Int, orderBy: EquipmentClassOrderByInput, skip: Int, where: EquipmentClassWhereInput): [EquipmentClass!]
  equipmentProperties(after: String, before: String, first: Int, last: Int, orderBy: EquipmentPropertyOrderByInput, skip: Int, where: EquipmentPropertyWhereInput): [EquipmentProperty!]
  id: ID!
  name: String!
  parent: Equipment
}

type EquipmentClass {
  children(after: String, before: String, first: Int, last: Int, orderBy: EquipmentClassOrderByInput, skip: Int, where: EquipmentClassWhereInput): [EquipmentClass!]
  code: String
  description: String
  equipmentClassProperties(after: String, before: String, first: Int, last: Int, orderBy: EquipmentClassPropertyOrderByInput, skip: Int, where: EquipmentClassPropertyWhereInput): [EquipmentClassProperty!]
  equipments(after: String, before: String, first: Int, last: Int, orderBy: EquipmentOrderByInput, skip: Int, where: EquipmentWhereInput): [Equipment!]
  id: ID!
  name: String!
  parent: EquipmentClass
}

input EquipmentClassCreateManyWithoutEquipmentsInput {
  connect: [EquipmentClassWhereUniqueInput!]
  create: [EquipmentClassCreateWithoutEquipmentsInput!]
}

input EquipmentClassCreateManyWithoutParentInput {
  connect: [EquipmentClassWhereUniqueInput!]
  create: [EquipmentClassCreateWithoutParentInput!]
}

input EquipmentClassCreateOneWithoutChildrenInput {
  connect: EquipmentClassWhereUniqueInput
  create: EquipmentClassCreateWithoutChildrenInput
}

input EquipmentClassCreateOneWithoutEquipmentClassPropertiesInput {
  connect: EquipmentClassWhereUniqueInput
  create: EquipmentClassCreateWithoutEquipmentClassPropertiesInput
}

input EquipmentClassCreateWithoutChildrenInput {
  code: String
  description: String
  equipmentClassProperties: EquipmentClassPropertyCreateManyWithoutEquipmentClassInput
  equipments: EquipmentCreateManyWithoutEquipmentClassesInput
  id: ID
  name: String!
  parent: EquipmentClassCreateOneWithoutChildrenInput
}

input EquipmentClassCreateWithoutEquipmentClassPropertiesInput {
  children: EquipmentClassCreateManyWithoutParentInput
  code: String
  description: String
  equipments: EquipmentCreateManyWithoutEquipmentClassesInput
  id: ID
  name: String!
  parent: EquipmentClassCreateOneWithoutChildrenInput
}

input EquipmentClassCreateWithoutEquipmentsInput {
  children: EquipmentClassCreateManyWithoutParentInput
  code: String
  description: String
  equipmentClassProperties: EquipmentClassPropertyCreateManyWithoutEquipmentClassInput
  id: ID
  name: String!
  parent: EquipmentClassCreateOneWithoutChildrenInput
}

input EquipmentClassCreateWithoutParentInput {
  children: EquipmentClassCreateManyWithoutParentInput
  code: String
  description: String
  equipmentClassProperties: EquipmentClassPropertyCreateManyWithoutEquipmentClassInput
  equipments: EquipmentCreateManyWithoutEquipmentClassesInput
  id: ID
  name: String!
}

enum EquipmentClassOrderByInput {
  code_ASC
  code_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type EquipmentClassProperty {
  children(after: String, before: String, first: Int, last: Int, orderBy: EquipmentClassPropertyOrderByInput, skip: Int, where: EquipmentClassPropertyWhereInput): [EquipmentClassProperty!]
  code: String
  description: String
  equipmentClass: EquipmentClass!
  id: ID!
  name: String!
  parent: EquipmentClassProperty
}

input EquipmentClassPropertyCreateManyWithoutEquipmentClassInput {
  connect: [EquipmentClassPropertyWhereUniqueInput!]
  create: [EquipmentClassPropertyCreateWithoutEquipmentClassInput!]
}

input EquipmentClassPropertyCreateManyWithoutParentInput {
  connect: [EquipmentClassPropertyWhereUniqueInput!]
  create: [EquipmentClassPropertyCreateWithoutParentInput!]
}

input EquipmentClassPropertyCreateOneWithoutChildrenInput {
  connect: EquipmentClassPropertyWhereUniqueInput
  create: EquipmentClassPropertyCreateWithoutChildrenInput
}

input EquipmentClassPropertyCreateWithoutChildrenInput {
  code: String
  description: String
  equipmentClass: EquipmentClassCreateOneWithoutEquipmentClassPropertiesInput!
  id: ID
  name: String!
  parent: EquipmentClassPropertyCreateOneWithoutChildrenInput
}

input EquipmentClassPropertyCreateWithoutEquipmentClassInput {
  children: EquipmentClassPropertyCreateManyWithoutParentInput
  code: String
  description: String
  id: ID
  name: String!
  parent: EquipmentClassPropertyCreateOneWithoutChildrenInput
}

input EquipmentClassPropertyCreateWithoutParentInput {
  children: EquipmentClassPropertyCreateManyWithoutParentInput
  code: String
  description: String
  equipmentClass: EquipmentClassCreateOneWithoutEquipmentClassPropertiesInput!
  id: ID
  name: String!
}

enum EquipmentClassPropertyOrderByInput {
  code_ASC
  code_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input EquipmentClassPropertyWhereInput {
  AND: [EquipmentClassPropertyWhereInput!]
  children_every: EquipmentClassPropertyWhereInput
  children_none: EquipmentClassPropertyWhereInput
  children_some: EquipmentClassPropertyWhereInput
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  equipmentClass: EquipmentClassWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [EquipmentClassPropertyWhereInput!]
  OR: [EquipmentClassPropertyWhereInput!]
  parent: EquipmentClassPropertyWhereInput
}

input EquipmentClassPropertyWhereUniqueInput {
  id: ID
}

input EquipmentClassWhereInput {
  AND: [EquipmentClassWhereInput!]
  children_every: EquipmentClassWhereInput
  children_none: EquipmentClassWhereInput
  children_some: EquipmentClassWhereInput
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  equipmentClassProperties_every: EquipmentClassPropertyWhereInput
  equipmentClassProperties_none: EquipmentClassPropertyWhereInput
  equipmentClassProperties_some: EquipmentClassPropertyWhereInput
  equipments_every: EquipmentWhereInput
  equipments_none: EquipmentWhereInput
  equipments_some: EquipmentWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [EquipmentClassWhereInput!]
  OR: [EquipmentClassWhereInput!]
  parent: EquipmentClassWhereInput
}

input EquipmentClassWhereUniqueInput {
  id: ID
}

input EquipmentCreateInput {
  children: EquipmentCreateManyWithoutParentInput
  code: String
  description: String
  equipmentClasses: EquipmentClassCreateManyWithoutEquipmentsInput
  equipmentProperties: EquipmentPropertyCreateManyWithoutEquipmentInput
  id: ID
  name: String!
  parent: EquipmentCreateOneWithoutChildrenInput
}

input EquipmentCreateManyWithoutEquipmentClassesInput {
  connect: [EquipmentWhereUniqueInput!]
  create: [EquipmentCreateWithoutEquipmentClassesInput!]
}

input EquipmentCreateManyWithoutParentInput {
  connect: [EquipmentWhereUniqueInput!]
  create: [EquipmentCreateWithoutParentInput!]
}

input EquipmentCreateOneWithoutChildrenInput {
  connect: EquipmentWhereUniqueInput
  create: EquipmentCreateWithoutChildrenInput
}

input EquipmentCreateOneWithoutEquipmentPropertiesInput {
  connect: EquipmentWhereUniqueInput
  create: EquipmentCreateWithoutEquipmentPropertiesInput
}

input EquipmentCreateWithoutChildrenInput {
  code: String
  description: String
  equipmentClasses: EquipmentClassCreateManyWithoutEquipmentsInput
  equipmentProperties: EquipmentPropertyCreateManyWithoutEquipmentInput
  id: ID
  name: String!
  parent: EquipmentCreateOneWithoutChildrenInput
}

input EquipmentCreateWithoutEquipmentClassesInput {
  children: EquipmentCreateManyWithoutParentInput
  code: String
  description: String
  equipmentProperties: EquipmentPropertyCreateManyWithoutEquipmentInput
  id: ID
  name: String!
  parent: EquipmentCreateOneWithoutChildrenInput
}

input EquipmentCreateWithoutEquipmentPropertiesInput {
  children: EquipmentCreateManyWithoutParentInput
  code: String
  description: String
  equipmentClasses: EquipmentClassCreateManyWithoutEquipmentsInput
  id: ID
  name: String!
  parent: EquipmentCreateOneWithoutChildrenInput
}

input EquipmentCreateWithoutParentInput {
  children: EquipmentCreateManyWithoutParentInput
  code: String
  description: String
  equipmentClasses: EquipmentClassCreateManyWithoutEquipmentsInput
  equipmentProperties: EquipmentPropertyCreateManyWithoutEquipmentInput
  id: ID
  name: String!
}

enum EquipmentOrderByInput {
  code_ASC
  code_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type EquipmentProperty {
  children(after: String, before: String, first: Int, last: Int, orderBy: EquipmentPropertyOrderByInput, skip: Int, where: EquipmentPropertyWhereInput): [EquipmentProperty!]
  code: String
  description: String
  equipment: Equipment!
  id: ID!
  name: String!
  parent: EquipmentProperty
}

input EquipmentPropertyCreateManyWithoutEquipmentInput {
  connect: [EquipmentPropertyWhereUniqueInput!]
  create: [EquipmentPropertyCreateWithoutEquipmentInput!]
}

input EquipmentPropertyCreateManyWithoutParentInput {
  connect: [EquipmentPropertyWhereUniqueInput!]
  create: [EquipmentPropertyCreateWithoutParentInput!]
}

input EquipmentPropertyCreateOneWithoutChildrenInput {
  connect: EquipmentPropertyWhereUniqueInput
  create: EquipmentPropertyCreateWithoutChildrenInput
}

input EquipmentPropertyCreateWithoutChildrenInput {
  code: String
  description: String
  equipment: EquipmentCreateOneWithoutEquipmentPropertiesInput!
  id: ID
  name: String!
  parent: EquipmentPropertyCreateOneWithoutChildrenInput
}

input EquipmentPropertyCreateWithoutEquipmentInput {
  children: EquipmentPropertyCreateManyWithoutParentInput
  code: String
  description: String
  id: ID
  name: String!
  parent: EquipmentPropertyCreateOneWithoutChildrenInput
}

input EquipmentPropertyCreateWithoutParentInput {
  children: EquipmentPropertyCreateManyWithoutParentInput
  code: String
  description: String
  equipment: EquipmentCreateOneWithoutEquipmentPropertiesInput!
  id: ID
  name: String!
}

enum EquipmentPropertyOrderByInput {
  code_ASC
  code_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input EquipmentPropertyWhereInput {
  AND: [EquipmentPropertyWhereInput!]
  children_every: EquipmentPropertyWhereInput
  children_none: EquipmentPropertyWhereInput
  children_some: EquipmentPropertyWhereInput
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  equipment: EquipmentWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [EquipmentPropertyWhereInput!]
  OR: [EquipmentPropertyWhereInput!]
  parent: EquipmentPropertyWhereInput
}

input EquipmentPropertyWhereUniqueInput {
  id: ID
}

input EquipmentWhereInput {
  AND: [EquipmentWhereInput!]
  children_every: EquipmentWhereInput
  children_none: EquipmentWhereInput
  children_some: EquipmentWhereInput
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  equipmentClasses_every: EquipmentClassWhereInput
  equipmentClasses_none: EquipmentClassWhereInput
  equipmentClasses_some: EquipmentClassWhereInput
  equipmentProperties_every: EquipmentPropertyWhereInput
  equipmentProperties_none: EquipmentPropertyWhereInput
  equipmentProperties_some: EquipmentPropertyWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [EquipmentWhereInput!]
  OR: [EquipmentWhereInput!]
  parent: EquipmentWhereInput
}

input EquipmentWhereUniqueInput {
  id: ID
}

type Mutation {
  createEquipment(data: EquipmentCreateInput!): Equipment!
  createSensor(code: String, name: String): NEXUS__UNKNOWN__TYPE__!
  deleteEquipmentProperty(where: EquipmentPropertyWhereUniqueInput!): EquipmentProperty
}

scalar NEXUS__UNKNOWN__TYPE__

type Query {
  equipment(where: EquipmentWhereUniqueInput!): Equipment
  equipments(after: String, before: String, first: Int, last: Int, orderBy: EquipmentOrderByInput, skip: Int, where: EquipmentWhereInput): [Equipment!]!
  sensors: Sensor!
}

type Sensor {
  children: [Equipment!]!
  code: String!
  equipmentClasses: [EquipmentClass!]!
  equipmentProperties: [EquipmentProperty!]!
  flow: Int!
  id: ID!
  name: String!
}
